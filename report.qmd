---
title: "Reddit Dashboard"
author: "Tim Zimmermann"
server: shiny
format: 
  dashboard: 
    theme: 
    - superhero
    - theme.scss
    nav-buttons: 
      - icon: reddit
        href: https://reddit.com
        target: _blank
---


```{python}
from helper.reddit import topPosts
import plotly.express as px
import re
from shiny.express import render, ui
from shinywidgets import render_plotly
from shiny import reactive

@reactive.calc
def data_frame():
  df = topPosts(input.sub()).drop(columns=['text', 'score_member_ratio'])
  df[['flair']] = df[['flair']].fillna('kein flair')
  return df


@reactive.calc
def readable_name():
  return re.sub(r'([a-z])([A-Z])', r'\1 \2', input.sub()).title()
```

# {.sidebar}
```{python}

ui.input_select('sub', 'Subreddit', ['eldenRing', 'SparkleMains', 'darksouls', 'germany', 'programmerHumor', 'memes', 'ask', 'ecchi', 'hololewd', 'GenshinImpactHentai', 'HonkaiStarRailHentai'])
```

# Plots

## Row {height="50%"}
```{python}
#| title: Overview
@render_plotly
def plot_overview():
    return px.scatter(data_frame(), 
                    x="date", y='score', color="flair", 
                    size='num_comments', size_max=60,
                    hover_name="title")
```

## Row {height="50%"}
```{python}
#| title: Most Popular Flairs
@render_plotly
def plot_flairs():
    return px.box(data_frame(), 
                    x="flair", y='score', color='flair')
```
```{python}
#| title: Most Controversial Flairs
@render_plotly
def plot_flairs_comments():
    return px.box(data_frame(), 
                    x="flair", y='num_comments', color='flair')
```

# Data

```{python}
@render.data_frame
def dataview():
    df = data_frame()
    return render.DataGrid(df.drop(df.columns[0], axis=1))
```
